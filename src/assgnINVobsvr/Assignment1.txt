Java III Programming
Assignment #1

--Project Description--
Create an inventory system for a multimedia store such as Borders (remember Borders?).  
The system will manage an inventory comprised of CDs, DVDs, and books.  The system will 
allow the user to enter new items into the system, search for and edit existing items, 
and delete items.  These operations are often collectively referred to as CRUD 
(Create, Retrieve, Update, and Delete).  The input and output can be accomplished by using 
the System.in and System.out objects.  The user interface code will be modularized as a View 
(or Delegate) component, such that it can easily be swapped out for a different View component. 
The initial view will be a text-based console view.  It is recommended that you use the Scanner 
class to manage keyboard input.  The underlying inventory representation will be modularized as 
a Model component such that it can easily be swapped out for a different Model. The inventory 
will be persistent, and it will be maintained using the Properties class.

Your application will make use of inheritance, polymorphism, and at least one interface definition.  
It will also make use of at least one enumeration (enum type).

Your application will run as runnable jar file.

--Deliverables--
There are four deliverables that must be submitted.  These deliverables are as follows:

1. A brief Software System Requirements Specification document.  This should reiterate the project 
description above, and provide enough additional specifications to facilitate design and implementation.

2. A brief Software System Design Document that identifies the key abstractions of your application, 
and describes the relationships between them.

3. Your application as a runnable jar.

4. IMPORTANT!  Your source code as well as capture images of your application in operation within a 
separate zip file.



==================Design Documentation==================

- Inventory System:
	- manage an inventory comprised of CDs, DVDs, and books
	- enter new items, search for and edit existing items, and delete items
		- Create, Retrieve, Update, and Delete
	- input/output (System.in / System.out)
		- Use scanner class
	- User interface modularized as a View (or Delegate) component 
		- initially text based
	- inventory representation will be modularized as a Model
		- will be persistent
		- will be maintained using the Properties class
		- https://www.youtube.com/watch?v=8GU6d2560F4&list=PLmCsXDGbJHdiOJXLVNbOIAH6D1C4M3e92
	- Will make use of: inheritance, polymorphism, and at least one interface definition
		- make use of at least one enumeration (enum type) 
		
	Model:
		- enum types
		
		Model Class:
		- InventoryModel (super)
			- title 	(string)
			- productID	(int)
			- UnitPrice	(double)
			- UnitsInStock	(int)
		SubClasses:  (inheritance)
			- CD
				- title		(string)
				- artist	(string)
				- genre		(string)	
				- releaseDate	(int) 
			- DVD
				- title
				- releaseDate
				- category (comedy)
			- Books
				- ISBNNumber
				- PublisherName
				- PublishYear
				- AuthorName
		methods:
			- addItem
			- queryItem
			- updateItem
			- deleteItem
			
			
	
	Controller:
	
	View:
	
	Properties File:
	https://www.youtube.com/watch?v=w7D5YB2U2jU



Notes for design documents

Inventory Items is the abstract method for the items CD, DVD, BOOK classes. These implement unique content creator names for (artist, studio, author) 
also for content product code (productCode, UPCCode, ISBN)

















